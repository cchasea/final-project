var score = 0;
var highScore = 0;
var currentScene = 0;
var birdY, birdVelocity, birdGravity;
var pipes = [];
var pipeSpeed = 5;

var drawButton = function() {
    fill(81, 166, 31);
    rect(119, 292, 161, 37);
    fill(255, 255, 255);
    textSize(22);
    text("Start Game", 144, 319);
}; //Khan Button class template 

var drawMe = function(X,Y,H){

noStroke();
//faceShape
fill(241, 194, 125);
ellipse(X,Y,H/150*82,H/150*93);
fill(42, 172, 252);
arc(X+(H/150*50),Y+(H/150*35),H/150*47,H/150*56,-6,381);
arc(X-(H/150*49),Y+(H/150*35),H/150*47,H/150*56,-6,381);
fill(64, 27, 0);
quad(X-(H/150*15),Y-(H/150*25),X-(H/150*10),Y-(H/150*56),X-(H/150*38),Y-(H/150*35),X-(H/150*43),Y+(H/150*2));
quad(X+(H/150*16),Y-(H/150*25),X+(H/150*44),Y+(H/150*9),X+(H/150*38),Y-(H/150*33),X+(H/150*14),Y-(H/150*44));
rect(X-(H/150*15),Y-(H/150*48),H/150*32,H/150*20);
fill(42, 172, 252);
quad(X-(H/150*41),Y-(H/150*15),X+(H/150*41),Y-(H/150*15),X+(H/150*33),Y-(H/150*54),X-(H/150*35),Y-(H/150*55));
fill(0, 0, 0);
//hat and face extras
bezier(X+(H/150*41),Y-(H/150*15),X+(H/150*38),Y-(H/150*73),X-(H/150*49),Y-(H/150*70),X-(H/150*42),Y-(H/150*14));
fill(241, 194, 125);
bezier(X+(H/150*15),Y-(H/150*25),X+(H/150*30),Y-(H/150*22),X-(H/150*4),Y-(H/150*63),X-(H/150*23),Y-(H/150*25));
fill(84, 25, 0);
ellipse(X-(H/150*15),Y,H/150*6,H/150*4);
ellipse(X+(H/150*11),Y,H/150*6,H/150*4);
fill(184, 129, 51);
bezier(X-(H/150*7),Y+(H/150*15),X+(H/150*15),Y+(H/150*14),X+(H/150*2),Y+(H/150*7),X-(H/150*2),Y-(H/150*1));
fill(255,255,255);
arc(X,Y+(H/150*22),(H/150*25),H/150*12,H/150*-4,180);
//shirt
fill(186, 180, 186);
rect(X-(H/150*37),Y+(H/150*46),H/150*77,H/150*68);
fill(20, 43, 252);
rect(X-(H/150*15),Y+(H/150*66),H/150*3,H/150*29);
rect(X+(H/150*4),Y+(H/150*65),H/150*-32,H/150*3);
rect(X+(H/150*11),Y+(H/150*65),H/150*3,H/150*29);
rect(X+(H/150*14),Y+(H/150*65),H/150*14,H/150*3);
rect(X+(H/150*25),Y+(H/150*66),H/150*3,H/150*11);
rect(X+(H/150*28),Y+(H/150*77),H/150*-16,H/150*3);

}; //Thomas Bitmoji code

var drawBitmoji = function(bitmojiObject) {
    var x = bitmojiObject.x;
    var y = bitmojiObject.y;
    var bitmojiScale = bitmojiObject.bitmojiScale;
    var initials = bitmojiObject.initals = true;
    var shirtColor = bitmojiObject.shirtColor;

    noStroke();
    fill(255, 0, 0);
    quad(x - 57 * bitmojiScale, y - 26 * bitmojiScale, x + 50 * bitmojiScale, y - 27 * bitmojiScale, x + 58 * bitmojiScale, y - 27 * bitmojiScale, x, y - 79 * bitmojiScale); //hat

    fill(255, 224, 189);
    ellipse(x, y, 82 * bitmojiScale, 100 * bitmojiScale); //head shape

    fill(255, 255, 255);
    arc(x - 38 * bitmojiScale, y + 40 * bitmojiScale, 25 * bitmojiScale, 55 * bitmojiScale, 0, 361); //chin chisel left
    arc(x + 38 * bitmojiScale, y + 40 * bitmojiScale, 25 * bitmojiScale, 55 * bitmojiScale, 0, 361); //chin chisel right

    fill(140, 75, 32);
    quad(x - 43 * bitmojiScale, y, x - 36 * bitmojiScale, y - 32 * bitmojiScale, x - 10 * bitmojiScale, y - 50 * bitmojiScale, x - 30 * bitmojiScale, y); //left hair
    quad(x + 43 * bitmojiScale, y + 4 * bitmojiScale, x + 35 * bitmojiScale, y - 35 * bitmojiScale, x + 3 * bitmojiScale, y - 50 * bitmojiScale, x + 31 * bitmojiScale, y - 4 * bitmojiScale); //right hair
    ellipse(x, y - 31 * bitmojiScale, 71 * bitmojiScale, 41 * bitmojiScale);

    ellipse(x - 14 * bitmojiScale, y + 3 * bitmojiScale, 7 * bitmojiScale, 7 * bitmojiScale); //left eye
    ellipse(x + 14 * bitmojiScale, y + 3 * bitmojiScale, 7 * bitmojiScale, 7 * bitmojiScale); //right eye

    stroke(0, 0, 0);
    fill(255, 224, 189);
    bezier(x, y + 25 * bitmojiScale, x + 21 * bitmojiScale, y + 20 * bitmojiScale, x - 8 * bitmojiScale, y + 16 * bitmojiScale, x - 3 * bitmojiScale, y + 12 * bitmojiScale); //nose

    fill(255, 255, 255);
    arc(x, y + 33 * bitmojiScale, 30 * bitmojiScale, 13 * bitmojiScale, 1, 180); //mouth

    noStroke();
    fill(0, 0, 0);
    rect(x - 7 * bitmojiScale, y + 50 * bitmojiScale, 16 * bitmojiScale, 56 * bitmojiScale); //tie

    fill(shirtColor);
    ellipse(x - 40 * bitmojiScale, y + 53 * bitmojiScale, 45 * bitmojiScale, 30 * bitmojiScale); //left shoulder
    ellipse(x + 40 * bitmojiScale, y + 53 * bitmojiScale, 45 * bitmojiScale, 30 * bitmojiScale); //right shoulder
    rect(x - 60 * bitmojiScale, y + 56 * bitmojiScale, 25 * bitmojiScale, 123 * bitmojiScale); // left body
    rect(x + 35 * bitmojiScale, y + 56 * bitmojiScale, 25 * bitmojiScale, 123 * bitmojiScale); // right body
    rect(x - 42 * bitmojiScale, y + 98 * bitmojiScale, 96 * bitmojiScale, 81 * bitmojiScale); // middle body
    triangle(x + 38 * bitmojiScale, y + 128 * bitmojiScale, x - 52 * bitmojiScale, y + 96 * bitmojiScale, x - 35 * bitmojiScale, y + 69 * bitmojiScale); // left triangle
    triangle(x + 38 * bitmojiScale, y + 65 * bitmojiScale, x - 20 * bitmojiScale, y + 134 * bitmojiScale, x + 40 * bitmojiScale, y + 111 * bitmojiScale); // right triangle

    if (bitmojiObject.initials === true) {
        stroke(0, 0, 0);
        fill(0, 0, 0);
        textSize(25 * bitmojiScale);
        text("CA", x - 19 * bitmojiScale, y + 125 * bitmojiScale, 119 * bitmojiScale, 104 * bitmojiScale);
    }
}; //cam bitmoji code

var drawPara1 = function(x, y){
  fill(255,0,0);
  arc(x,y,40,-40,1,180);
  stroke(0, 0, 0);
  line(x,y+20,x-20,y);
  line(x,y+20,x,y);
  line(x,y+20,x+20,y);
  
  drawMe(x,y+25,30); 
};

var drawPara2 = function(x,y,bitmojiObject){
    fill(0,255,0);
    arc(x,y,40,-40,1,180);
    
    stroke(0, 0, 0);
    line(x,y+20,x-20,y);
    line(x,y+20,x,y);
    line(x,y+20,x+20,y);
    
    drawBitmoji({
        x: x,
        y: y+20,
        bitmojiScale: 0.15,
        initials: true,
        shirtColor: bitmojiObject.shirtColor
    });
    
};

var splashScreen = function() {
    background(42, 172, 252);
    fill(255,0,0);
    textSize(30);
    text("Thomas and Cams", 73,50);
    text("Rhody Run", 124,76);
    
    fill(0, 0, 0);
    textSize(16);
    text("Instructions:", 150,200);
    text("          Dodge the Pipes to get points  \n        Hitting a pipe will end your game", 50,220);
    
    drawButton();
    drawMe(100,136,75);
    drawBitmoji({
    x: 269,
    y: 136,
    bitmojiScale: 0.35,
    initials: true,
    shirtColor: color(255, 0, 0)
});
}; //Splash Screen for start game

function initializeFlappyBird() {
    birdY = height / 2;
    birdVelocity = 0;
    birdGravity = 0.5;
}


function Pipe() {
    this.x = width;
    this.topHeight = random(height/2);
    this.bottomHeight = random(height/2);
    this.width = 40;
    this.gap = 170; // Gap between pipes
    this.speed = pipeSpeed;
    this.passed = false;

    this.show = function() {
        stroke(0, 0, 0);
        fill(0, 255, 0);
        rect(this.x, 0, this.width, this.topHeight);
        rect(this.x, this.topHeight + this.gap, this.width, height - this.topHeight - this.gap);
    };

    this.update = function() {
        this.x -= this.speed;

        // if the first pipe is off screen then itll make a new one with new random heights
        if (this.x < -this.width) {
            this.x = width;
            this.topHeight = random(height / 2);
            this.bottomHeight = random(height / 2);
        }
        if (score >= 100) {
            this.gap = 130;
        } 
        if (score >= 200) {
            this.gap = 100;
        } 
    };
    
        
}

function initializePipes() {
    pipes.push(new Pipe());
}

function checkCollision() {
    for (var i = 0; i < pipes.length; i++) {
        // Check if player collides with pipe
        if (birdY - 15 < pipes[i].topHeight || birdY + 15 > pipes[i].topHeight + pipes[i].gap) {
            if (50 > pipes[i].x && 50 < pipes[i].x + pipes[i].width) {
                // Collision detected, switch to game over scene
                currentScene = 2;
            }
        }
    }
}


function drawBird() {
    fill(255, 204, 0); // Yellow color for the bird
    ellipse(50, birdY, 40, 30);
    ellipse(42, birdY - 5, 15, 15);
    ellipse(58, birdY - 5, 15, 15);

    fill(0); // Black color for the eyes
    ellipse(42, birdY - 5, 5, 5);
    ellipse(58, birdY - 5, 5, 5);

    fill(255); // White color for the beak
    triangle(50, birdY, 55, birdY + 5, 50, birdY + 10);
}

function updateBird() {
     birdVelocity += birdGravity;
    birdY += birdVelocity;

    // Simple ground collision check
    if (birdY > height - 15) {
        birdY = height - 15;
        birdVelocity = 0;
    }
    checkCollision();
}

function drawPipes() {
     for (var i = 0; i < pipes.length; i++) {
        pipes[i].show();
    }
}

function updatePipes() {
    for (var i = 0; i < pipes.length; i++) {
        pipes[i].update();
        
        if(pipes[i].x + pipes[i].width < 50){
            pipes[i].passed = true;
            score++; 
            
            if(score > highScore){    
                highScore = score;
            }
            }
    }
}

function keyPressed() {
    // Flap when space bar is pressed
    if (keyCode === 32) {
        birdVelocity = -10;
    }
}

function resetGame() {
    birdY = 200;
    score = 0;
    pipes = [];
    currentScene = 0;
}

var drawCloud = function(x,y){
    fill(255, 255, 255);
    noStroke();
    ellipse(x,y,40,40);
    ellipse(x + 20,y - 10 ,40,40);
    ellipse(x + 40,y,40,40);
};

var game = function() {
    background(42, 172, 252);
    
    drawCloud(50,50);
    drawCloud(200,100);
    drawCloud(350,70);

    drawPara1(100,100);
    drawPara2(250,150, {shirtColor: color(255, 0, 0)});

    drawBird();
    updateBird();

    drawPipes();
    updatePipes();
    
    fill(255,255,255);
    textSize(20);
    text("Score: " +score,20,30);
    
};//Will be game function eventually (place holder for now)

var gameOver = function() {
     background(0, 0, 0);
     fill(255, 0, 0);
     textSize(30);
     text("Game Over",width / 2 + -76, height / 3);
  
    
    textSize(20);
    fill(255,255,255);
    text("Final Score: " + score, width / 2 +-70, height / 2);
    text("High Score: " +highScore, width / 2 - 70, height / 2+40);
    
    drawButton();
    
}; //Will be game over function (place holder for now)

var draw = function() {
    if (currentScene ===0){
        splashScreen();
    }
    else if (currentScene ===  1){
       game();
       fill(255);
       textSize(20);
       text("Score: " + score, 20,30);
    }
    else if (currentScene === 2){
        gameOver();
    }

}; //Scene control

var mouseClicked = function() {
    if (currentScene === 0) {
        if (mouseX > 119 && mouseX < 280 && mouseY > 292 && mouseY < 329) {
            currentScene = 1;
            initializeFlappyBird();
            initializePipes();
        }
    } else if (currentScene === 2){
        if (mouseX > 119 && mouseX < 280 && mouseY > 292 && mouseY < 329) {
            resetGame();
        }
        }
}; //Mouseclicked for changing sceenes (temp)